#!/bin/sh

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir="${3}"
buildpack=$(cd "$(dirname $0)/.." && pwd)

indent() {
  case $(uname -s) in
    Darwin*) sed 's/^/       /';;
    *) sed -u 's/^/       /';;
  esac
}

cd $cache

echo "-----> Downloading SQLite"
if [ ! -s sqlite-autoconf-3310100.tar.gz ]; then
  curl -so sqlite-autoconf-3310100.tar.gz \
    https://sqlite.org/2020/sqlite-autoconf-3310100.tar.gz \
    | indent
fi

echo "-----> Unarchiving SQLite"
if [ ! -s sqlite-autoconf-3310100 ]; then
  mkdir -p sqlite-autoconf-3310100
  tar -xf sqlite-autoconf-3310100.tar.gz
fi

echo "-----> Building SQLite"
if [ ! -s "$build/vendor/sqlite" ]; then
  cd sqlite-autoconf-3310100
  ./configure --prefix=$build/vendor/sqlite | indent
  make | indent
fi

echo "-----> Installing SQLite"
if [ ! -s "$build/vendor/sqlite" ]; then
  make install | indent
  mkdir -p $build/.profile.d
  echo <<EOF >> $build/.profile.d/sqlite.sh
PATH=$PATH:$HOME/vendor/sqlite
EOF
fi
